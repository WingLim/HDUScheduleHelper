@import 'base';
@import 'custom-style';

// --------------------------------

// Schedule Template - by CodyHouse.co

// --------------------------------

:root {
    // colors
    @include defineColorHSL(--cd-color-event-1, 199, 25%, 46%);   // Smalt Blue
    @include defineColorHSL(--cd-color-event-2, 271, 23%, 26%);   // Martinique
    @include defineColorHSL(--cd-color-event-3, 162, 14%, 68%);   // Edward
    @include defineColorHSL(--cd-color-event-4, 31, 89%, 68%);    // Rajah
    @include defineColorHSL(--cd-color-text, 0, 0%, 13%);         // Black
    @include defineColorHSL(--cd-color-border, 0, 0%, 92%);       // Grey
  
    // font
    --font-primary: 'Source Sans Pro', sans-serif;
  
    //schedule template
    --schedule-rows-number: 26;
    --schedule-rows-height: 50px;
  }
  
  body {
      color: var(--cd-color-text);
  }
  
  a {
      color: var(--cd-color-event-3);
  }
  
  .cd-schedule {
      position: relative;
  
      &::before { // never visible - this is used in js to check the current MQ
          content: 'mobile';
          display: none;
      }
    
    .js & {
        @include breakpoint(md) {
        width: calc(100% - 2*var(--component-padding));
        margin-left: auto;
        margin-right: auto;
        max-width: var(--max-width-xl);
  
            &::before {
                content: 'desktop';
            }
        }
    }
  }
  
  .cd-schedule__timeline { // events time
      display: none;
  
    .js & {
        @include breakpoint(md) {
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
            padding-top: var(--schedule-rows-height);
  
            li {
                position: relative;
                height: var(--schedule-rows-height);
  
                &::after { // this is used to create the table horizontal lines
                    content: '';
                    position: absolute;
                    bottom: 0;
                    left: 0;
                    width: 100%;
                    height: 1px;
                    background: var(--cd-color-border);
                }
  
                &:last-of-type::after {
                    display: none;
                }
  
                span {
                    display: none;
                }
            }
        }
  
        @include breakpoint(lg) {
            li {
  
                &::after {
                    width: calc(100% - 60px);
                    left: 60px;
                }
  
                span {
                    display: inline-block;
                    transform: translateY(-50%);
            font-size: var(--text-sm);
                }
  
                &:nth-of-type(2n) span {
                    display: none;
                }
            }
        }
    }
  }
  
  .cd-schedule__events {
      position: relative;
      z-index: 1;
    
    .js & {
        @include breakpoint(md) {
            width: 100%;
  
        > ul {
          display: flex;
          flex-wrap: nowrap;
        }
        }
  
        @include breakpoint(lg) {
            width: calc(100% - 60px); // 60px is the .cd-schedule__timeline > li::after element left
            margin-left: 60px;
        }
    }
  }
  
  .cd-schedule__group { // group of same day events
    margin-bottom: var(--space-lg);
    
    .js & {
      @include breakpoint(md) {
        flex-basis: 0;
        flex-grow: 1;
        border: 1px solid var(--cd-color-border);
        margin-bottom: 0; // reset style
  
        &:not(:first-of-type) {
          border-left-width: 0;
        }
      }
    }
  }
  
  .cd-schedule__group > ul {
    position: relative;
    padding: 0 var(--component-padding);
    display: flex;
    overflow-x: scroll;
    -webkit-overflow-scrolling: touch;
  
    &::after { // never visible - used to add a right padding to .cd-schedule__group > ul
      display: inline-block;
      content: '-';
      width: 1px;
      height: 100%;
      opacity: 0;
      color: transparent;
    }
    
    .js & {
      @include breakpoint(md) {
        height: calc(var(--schedule-rows-height)*var(--schedule-rows-number));
        overflow: visible;
        padding: 0;
  
        &::after { // reset style
          display: none;
        }
      }
    }
  }
  
  .cd-schedule__top-info { // day label
    width: 100%;
    padding: 0 var(--component-padding);
  
    > span {
      display: inline-block;
      margin-bottom: var(--space-sm);
      font-weight: bold;
    }
    
    .js & {
      @include breakpoint(md) {
        // vertically center its content
        display: flex;
        align-items: center;
        justify-content: center;
        height: var(--schedule-rows-height);
        border-bottom: 1px solid var(--cd-color-border);
        padding: 0; // reset style
  
        > span {
          font-weight: normal;
          font-size: var(--text-sm);
          margin-bottom: 0;
        } 
      }
    }
  }
  
  .cd-schedule__event {
    flex-shrink: 0; // force them to stay on one line
    float: left; // flex fallback
    height: 150px;
    width: 70%;
    max-width: 300px;
    margin-right: var(--space-md);
    transition: opacity .2s, background .2s;
    
    a {
      display: block;
      height: 100%;
      padding: var(--space-sm);
      box-shadow: inset 0 -3px 0 rgba(#000, .2);
      text-decoration: none;
    }
  
    a::before { // event start/end date
      content: attr(data-start)' - 'attr(data-end);
    }
    
    .js & {
      @include breakpoint(sm) {
        width: 40%;
      }
  
      @include breakpoint(md) {
        position: absolute;
        z-index: 3;
        width: calc(100% + 2px); // top position and height will be set using js
        left: -1px;
        max-width: none; // reset style
        margin-right: 0;
  
        a {
          padding: var(--space-sm);
          box-shadow: 0 10px 20px rgba(#000, .1), inset 0 -3px 0 rgba(#000, .2);
        }
      }
    }
  }
  
  .js {
    @include breakpoint(md) {
      .cd-schedule__event--selected { // classes added when an user select the event
        visibility: hidden;
      }
  
      .cd-schedule--loading .cd-schedule__event {
          // the class .cd-schedule--loading is added by default to the .cd-schedule element
          // it is removed as soon as the single events are placed in the schedule plan (using javascript)
          opacity: 0;
      }
    }
  }
  
  .cd-schedule__name, // event name in the schedule template
  .cd-schedule__event a::before, // event date in the schedule template
  .cd-schedule-modal__name, // event name in the modal element
  .cd-schedule-modal__date { // event date in the modal element
      display: block;
      color: var(--color-white);
      font-weight: bold;
      @include fontSmooth;
  }
  
  .cd-schedule__name,
  .cd-schedule-modal__name {
      font-size: var(--text-lg);
  
    @include breakpoint(md) {
      font-size: calc(var(--text-sm)*1.2);
    }
  }
  
  .cd-schedule-modal__date, // not included in the the HTML but added using JavScript
  .cd-schedule__event a::before { 
      opacity: .7;
      margin-bottom: var(--space-xxxs);
  
    @include breakpoint(md) {
      font-size: calc(var(--text-xs)*1.05);
      margin-bottom: var(--space-xxxxs);
    }
  }
  
  .cd-schedule__event [data-event="event-1"],
  .cd-schedule-modal[data-event="event-1"] .cd-schedule-modal__header-bg {
      // this is used to set a background color for the event and the modal window
      background: var(--cd-color-event-1);
  }
  
  .cd-schedule__event [data-event="event-2"],
  .cd-schedule-modal[data-event="event-2"] .cd-schedule-modal__header-bg {
      background: var(--cd-color-event-2);
  }
  
  .cd-schedule__event [data-event="event-3"],
  .cd-schedule-modal[data-event="event-3"] .cd-schedule-modal__header-bg {
      background: var(--cd-color-event-3);
  }
  
  .cd-schedule__event [data-event="event-4"],
  .cd-schedule-modal[data-event="event-4"] .cd-schedule-modal__header-bg {
      background: var(--cd-color-event-4);
  }
  
  .cd-schedule-modal {
      position: fixed;
      z-index: 3;
      top: 0;
      right: 0;
      height: 100%;
      width: 100%;
      visibility: hidden;
      transform: translateZ(0); // Force Hardware acceleration
  
      transform: translateX(100%);
      transition: transform .4s, visibility .4s;
      transition-timing-function: cubic-bezier(.5,0,.1,1);
  
      @include breakpoint(md) {
          // reset style
          right: auto;
          width: auto;
          height: auto;
          transform: translateX(0);
          will-change: transform, width, height;
          transition: height .4s, width .4s, transform .4s, visibility .4s;
          transition-timing-function: cubic-bezier(.5,0,.1,1);
      }
  }
  
  .cd-schedule-modal__header {
    position: relative;
    height: 70px;
    display: flex;
    align-content: center;
    width: 100%;
  
    @include breakpoint(md) {
      position: absolute;
      display: block;
      top: 0;
      left: 0;
      height: 100%;
    }
  }
  
  .cd-schedule-modal__content {
    position: relative;
    z-index: 3;
    display: flex;
    align-items: center;
    padding: var(--space-sm) var(--component-padding);
  
    @include breakpoint(md) {
      // reset style
      display: block;
      padding: var(--space-sm);
    }
  }
  
  .cd-schedule-modal__body {
    position: relative;
    width: 100%;
    height: calc(100% - 70px); // 70px is the .cd-schedule-modal__header height
  
    @include breakpoint(md) {
      height: 100%;
      width: auto;
    }
  }
  
  .cd-schedule-modal__event-info {
    position: relative;
    z-index: 2;
    line-height: var(--body-line-height);
    height: 100%;
    overflow: hidden;
    font-size: calc(var(--text-sm) * 1.2);
  
    > div {
      overflow: auto;
      height: 100%;
      padding: var(--space-md) var(--component-padding);
    }
  
    @include breakpoint(md) {
      opacity: 0;
      font-size: var(--text-sm);
  
      > div {
        padding: calc(var(--space-md)*1.3) calc(var(--space-lg)*1.2) calc(var(--space-md)*1.3) calc(var(--space-md)*1.3);
      }
    }
  }
  
  .cd-schedule-modal__header-bg, 
  .cd-schedule-modal__body-bg { // these are the morphing backgrounds - visible on desktop only
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    
    @include breakpoint(md) {
      // Force Hardware acceleration
      transform: translateZ(0);
      will-change: transform;
      backface-visibility: hidden;
    }
  }
  
  .cd-schedule-modal__header-bg {
    z-index: 2;
    transform-origin: top center;
    
    @include breakpoint(md) {
      transition: transform .4s;
      transition-timing-function: cubic-bezier(.5,0,.1,1);
    }
  }
  
  .cd-schedule-modal__body-bg {
    z-index: 1;
    background: var(--color-white);
    transform-origin: top left;
  
    @include breakpoint(md) {
      opacity: 0;
      transform: none;
    }
  }
  
  .cd-schedule-modal--no-transition {
    transition: none;
  
    .cd-schedule-modal__header-bg, 
    .cd-schedule-modal__body-bg {
      transition: none !important;
    }
  }
  
  .cd-schedule-modal__date {
    display: none;
  
    @include breakpoint(md) {
      display: block;
    }
  }
  
  .cd-schedule-modal__close { // close modal icon
    position: absolute;
    z-index: 3;
    top: 0;
    right: 0;
    height: 70px;
    width: 70px;
    background: alpha(var(--color-black), .1);
  
    &::before, &::after { // these are the two lines of the 'X' icon
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 2px;
      height: 22px;
      background: var(--color-white);
      backface-visibility: hidden;
    }
  
    &::before {
      transform: translateX(-50%) translateY(-50%) rotate(45deg);
    }
  
    &::after {
      transform: translateX(-50%) translateY(-50%) rotate(-45deg);
    }
  
    @include breakpoint(md) {
      width: 40px;
      height: 40px;
      background: transparent;
      opacity: 0;
  
      &::after, &::before {
        background: var(--cd-color-text);
        height: 16px;
      }
    }
  }
  
  .cd-schedule-modal--open { // this class is added as soon as an event is selected
      transform: translateX(0);
      visibility: visible;
  
      .cd-schedule-modal__event-info > div { // smooth scroll on iOS touch deviceS
          -webkit-overflow-scrolling: touch;
      }
  }
  
  @include breakpoint(md) {
      .cd-schedule-modal--animation-completed  .cd-schedule-modal__close,
      .cd-schedule-modal--content-loaded.cd-schedule-modal--animation-completed  .cd-schedule-modal__event-info {
          // 	the .cd-schedule-modal--animation-completed class is added when the modal animation is completed
          //	the .cd-schedule-modal--content-loaded class is added when the modal content has been loaded (using ajax)
          opacity: 1;
          transition: opacity .2s;
      }
  
      .cd-schedule-modal--open .cd-schedule-modal__body-bg {
          opacity: 1;
          transition: transform .4s;
          transition-timing-function: cubic-bezier(.5,0,.1,1);
      }
  }
  
  .cd-schedule__cover-layer { // layer between the content and the modal window
      position: fixed;
      z-index: 2;
      top: 0;
      left: 0;
      height: 100%;
      width: 100%;
      background: alpha(var(--color-black), 0.8);
      opacity: 0;
      visibility: hidden;
      transition: opacity .4s, visibility .4s;
  }
  
  .cd-schedule-modal--open + .cd-schedule__cover-layer {
      opacity: 1;
      visibility: visible;
  }
  
  //demo style
  .cd-main-header h1 {
    color: var(--cd-color-text);
    font-weight: 700;
  }
  
  .cd-article-link {
    font-size: var(--text-sm);
    transition: opacity .2s;
  
    &:hover {
      opacity: 0.8;
    }
  }

  /* -------------------------------- 

File#: _1_modal-window
Title: Modal Window
Descr: A modal dialog used to display critical information
Usage: codyhouse.co/license

-------------------------------- */

:root {
    // close button
    --modal-close-btn-size: 1.25em;
    --modal-close-btn-padding: var(--space-sm);
  }
  
  .modal {
    position: fixed;
    z-index: var(--zindex-overlay);
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: alpha(var(--color-contrast-higher), 0.9);
    // hide element
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
  }
  
  .modal--is-visible {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
  }
  
  .modal__content {
    border-radius: var(--radius-md);
    overflow: auto;
    width: calc(100% - 2*var(--component-padding));
    max-height: calc(100vh - 4*(var(--modal-close-btn-size) + var(--modal-close-btn-padding)));
    background-color: var(--color-bg);
  }
  
  .modal__header {
    padding: var(--space-sm) var(--component-padding);
    background-color: var(--color-contrast-lower);
    // align title and icon (if icon is placed inside header)
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .modal__body {
    height: 100%;
    padding: var(--space-sm) var(--component-padding);
  }
  
  .modal__footer {
    padding: var(--component-padding);
  }
  
  .modal__close-btn {
    position: fixed;
    top: var(--space-sm);
    right: var(--space-sm);
    z-index: var(--zindex-fixed-element);
    padding: var(--modal-close-btn-padding);
    border-radius: 50%;
    background-color: alpha(var(--color-contrast-higher), 0.8);
    transition: .2s;
  
    &:hover {
      background-color: var(--color-contrast-higher);
    }
  
    .icon {
      display: block;
      color: var(--color-bg);
      width: var(--modal-close-btn-size);
      height: var(--modal-close-btn-size);
    }
  }
  
  // if close btn is inside content (e.g, inside header)
  .modal__content {
    .modal__close-btn { // alt close btn style (if inside modal content)
      --modal-close-btn-size: 1em;
      --modal-close-btn-padding: 0.5em;
      position: static;
      flex-shrink: 0;
      background-color: var(--color-bg);
      box-shadow: var(--shadow-sm);
      transition: .2s;
  
      .icon {
        color: inherit;
      }
  
      &:hover {
        box-shadow: var(--shadow-md);
  
        .icon {
          color: var(--color-contrast-higher);
        }
      }
    }
  }
  
  // close btn sticky within content
  .modal__content {
    .modal__close-btn--sticky {
      position: sticky;
      float: right;
      top: 0;
      right: 0;
    }
  }
  
  // --header-is-fixed
  .modal--header-is-fixed {
    .modal__header {
      position: sticky;
      top: 0;
    }
  }
  
  // --footer-is-fixed
  .modal--footer-is-fixed {
    .modal__footer {
      position: sticky;
      bottom: 0;
      background: var(--color-bg);
      box-shadow: var(--shadow-sm);
    }
  }
  
  // if animation = enabled
  .modal[data-animation="on"] {
    transition: opacity .3s, visibility .3s;
  
    .modal__content {
      will-change: transform;
      transition: transform .3s var(--ease-out);
      transform: translateY(10%);
    }
  
    &.modal--is-visible .modal__content {
      transform: translateY(0);
    }
  }

  /* -------------------------------- 

File#: _1_custom-select
Title: Custom Select
Descr: Custom Select Control
Usage: codyhouse.co/license

-------------------------------- */

:root {
    --select-icon-size: 1em;
    --select-icon-right-margin: var(--space-sm);
  }
  
  .select {
    position: relative;
  }
  
  .select__input {
    width: 100%;
    padding-right: calc(var(--select-icon-size) + var(--select-icon-right-margin)) !important;
  }
  
  .select__icon {
    width: var(--select-icon-size);
    height: var(--select-icon-size);
    pointer-events: none;
    position: absolute;
    right: var(--select-icon-right-margin);
    top: 50%;
    transform: translateY(-50%);
  }
  
  // --custom-dropdown
  :root {
    --select-dropdown-gap: 4px; // distance between select control and custom dropdown
  }
  
  .select__button { // created in JS - custom select control
    width: 100%;
  }
  
  .select__button[aria-expanded="true"] {
    // custom select control if dropdown = visible
  } 
  
  .select__dropdown { // created in JS - custom select dropdown
    position: absolute;
    left: 0;
    top: 100%;
    min-width: 200px;
    max-height: 1px; // updated in JS
    background-color: var(--color-bg);
    box-shadow: var(--shadow-md);
    padding: var(--space-xxs) 0;
    border-radius: var(--radius-md);
    z-index: var(--zindex-popover);
    margin-top: var(--select-dropdown-gap);
    margin-bottom: var(--select-dropdown-gap);
    overflow: auto;
  
    // reset spacing and text units - no longer affected by em units
    @include spaceUnit(1rem);
    @include textUnit(1rem);
  
    visibility: hidden;
    opacity: 0;
    transition: visibility 0s .2s, opacity .2s;
  }
  
  .select__dropdown--right { // change dropdown position based on the available space
    right: 0;
    left: auto;
  }
  
  .select__dropdown--up {
    bottom: 100%;
    top: auto;
  }
  
  .select__button[aria-expanded="true"] + .select__dropdown {
    visibility: visible;
    opacity: 1;
    transition: visibility 0s, opacity .2s;
  }
  
  // custom <optgroup> list - include all <option>s if no <optgroup> available 
  .select__list {
    list-style: none !important;
  }
  
  .select__list:not(:first-of-type) { 
    padding-top: var(--space-xxs);
  }
  
  .select__list:not(:last-of-type) {
    border-bottom: 1px solid var(--color-contrast-low);
    padding-bottom: var(--space-xxs);
  }
  
  .select__item { // single item inside .select__list
    display: block;
    padding: var(--space-xs) var(--space-lg) var(--space-xs) var(--space-md);
    color: var(--color-contrast-high);
    width: 100%;
    text-align: left;
    // truncate text
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  
  .select__item--optgroup { // custom <optgroup> label
    font-size: var(--text-sm);
    color: var(--color-contrast-medium);
   }
  
  .select__item--option { // custom <option> label
    cursor: pointer;
  
    &:hover {
      background-color: var(--color-contrast-lower);
    }
  
    &:focus {
      outline: none;
      background-color: alpha(var(--color-primary), 0.1);
    }
  
    &[aria-selected=true] { // selected option
      background-color: var(--color-primary);
      color: var(--color-white);
      position: relative;
      @include fontSmooth;
  
      &::after { // check icon next to the selected language
        content: '';
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        height: 16px;
        width: 16px;
        right: var(--space-sm);
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpolyline stroke-width='1.5' stroke='%23ffffff' fill='none' stroke-linecap='round' stroke-linejoin='round' points='1,9 5,13 15,3 '/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-size: cover;
        background-position: center;
      }
    }
  }
  
  html:not(.js ) .select .icon { // hide icon if JS = disabled
    display: none;
  }

  /* -------------------------------- 

File#: _1_table
Title: Table
Descr: Data tables used to organize and display information in rows and columns
Usage: codyhouse.co/license

-------------------------------- */

.table {
    position: relative;
    z-index: 1;
    border-collapse: separate;
    border-spacing: 0 var(--space-md); // row gap
    margin-top: calc(-2 * var(--space-md)); // set spacing variable = row gap ☝️
  }
  
  .table__header { // hide table header - but keep it accessible to SR
    @include srHide;
  }
  
  .table__row {
    .table__cell:first-child {
      border-radius: var(--radius-md) var(--radius-md) 0 0;
    }
  
    .table__cell:last-child {
      border-radius: 0 0 var(--radius-md) var(--radius-md);
      
      &::after { // hide border bottom
        display: none;
      }
    }
  }
  
  .table__cell {
    position: relative;
    display: block; // fallback
    display: flex;
    justify-content: space-between;
    padding: var(--space-md);
    background-color: var(--color-contrast-lower);
  
    &::after { // border bottom
      content: '';
      position: absolute;
      bottom: 0;
      left: var(--space-md);
      width: calc(100% - (2 * var(--space-md)));
      height: 1px;
      background-color: var(--color-contrast-low);
    }
  }
  
  .table__label { // inline labels -> visible when table header is hidden
    font-weight: bold;
    color: var(--color-contrast-higher);
    margin-right: var(--space-md);
  }
  
  .table:not(.table--expanded) {
    .table__cell {
      width: 100%;
      text-align: right;
    }
  
    .table__label {
      text-align: left;
    }
  }
  
  .js {
    .table {
      opacity: 0; // hide table while it is initialized in JS
    }
  
    .table--loaded {
      opacity: 1;
    }
  }
  
  // --expanded - change table layout -> show standard rows and cols
  .table--expanded {
    // reset
    border-collapse: collapse;
    border-spacing: 0;
    margin-top: 0;
  
    // new style
    border-bottom: 2px solid var(--color-contrast-low);
  
    .table__header {
      @include srShow;
    
      .table__cell { // header cell style
        position: relative;
        z-index: 10;
        background-color: var(--color-bg);
        box-shadow: 0 2px 0 var(--color-contrast-low);
        font-weight: bold;
        color: var(--color-contrast-higher);
      }
    }
  
    .table__body {
      .table__row {
        &:nth-child(odd) {
          background-color: var(--color-contrast-lower);
        }
      }
    }
  
    .table__cell {
      // reset
      border-radius: 0 !important;
      display: table-cell;
      padding: var(--space-sm);
      background-color: transparent;
  
      &::after {
        display: none;
      }
    }
  
    .table__label { // hide inline labels
      display: none;
    }
  
    // --header-sticky
    .table__header--sticky {
      .table__cell { // header cell style
        position: sticky;
        top: 0;
      }
    }
  }
  
  // detect when the table needs to switch from the mobile layout to an expanded one - used in JS
  [class*="table--expanded"]::before {
    display: none;
  }
  
  @each $mq in 'xs' 'sm' 'md' 'lg' 'xl' {
    .table--expanded\@#{$mq}::before {
      content: 'collapsed';
      @include breakpoint(#{$mq}) {
        content: 'expanded';
      }
    }
  }

  .scrollbar {
    &::-webkit-scrollbar { // general scrollbar style
      width: 12px;
    }
  
    &::-webkit-scrollbar-track { // progress bar
      background-color: var(--color-contrast-lower);
    }
  
    &::-webkit-scrollbar-thumb { // handle
      background-color: alpha(var(--color-contrast-higher), 0.9);
      border-radius: 0;
    }
  
    &::-webkit-scrollbar-thumb:hover {
      background-color: var(--color-contrast-higher);
    }
  }

.btn .btn__content-a {
    display: inline-flex;
}

.btn .btn__content-b,
.btn .btn__content-c,
.btn .btn__content-d {
    display: none;
}

.btn--state-b {
    .btn__content-a,
    .btn__content-c,
    .btn__content-d {
        display: none;
    }

    .btn__content-b {
        display: block; // fallback
        display: inline-flex;
    }
}

.btn--state-c {
    .btn__content-a,
    .btn__content-b,
    .btn__content-d {
        display: none;
    }
    
    .btn__content-c {
        display: block; // fallback
        display: inline-flex;
    }
}

.btn--state-d {
    .btn__content-a,
    .btn__content-b,
    .btn__content-c {
        display: none;
    }
    
    .btn__content-d {
        display: block; // fallback
        display: inline-flex;
    }
}

.btn--error {
    background-color: var(--color-error);
    color: var(--color-white);

    &:hover {
        background-color: var(--color-error-light);
    }
}

.btn--success {
    background-color: var(--color-success);
    color: var(--color-white);

    &:hover {
        background-color: var(--color-success-light);
    }
}

.btn--state-c {
    @extend .btn--success;
}

.btn--state-d {
    @extend .btn--error
}

/* -------------------------------- 

File#: _2_flexi-header
Title: Flexi Header
Descr: Customizable header template
Usage: codyhouse.co/license

-------------------------------- */

:root {
  --f-header-height: 50px;
  --f-header-logo-width: 130px;

  @include breakpoint(md) {
    --f-header-height: 70px;
  }
}

.f-header {
  position: relative;
  height: var(--f-header-height);
  z-index: var(--zindex-header);
}

.f-header__mobile-content { // logo + menu button on small devices
  position: relative;
  display: flex;
  height: 100%;
  justify-content: space-between;
  align-items: center;
  z-index: 2;
}

.f-header__logo {
  display: block;
  width: var(--f-header-logo-width);
  flex-shrink: 0;
  text-decoration: none;

  svg, img {
    display: block;
  }
}

.f-header__nav-control { // menu button
  --anim-menu-btn-size: 40px;
  // 🍔 icon
  --anim-menu-btn-icon-size: 28px;
  --anim-menu-btn-icon-stroke: 2px;
}

.f-header__nav {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  max-height: 100vh;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  overscroll-behavior: contain;
  padding: 0 0 var(--space-md);
  background-color: var(--color-bg);
  box-shadow: var(--shadow-md);
  font-size: var(--text-md); // edit font size of all nav elements
  z-index: 1;

  visibility: hidden;
  opacity: 0;
  transform: translateY(-1em);

  &::before { // top header bg + border
    content: '';
    display: block;
    position: sticky;
    top: 0;
    height: var(--f-header-height);
    background-color: inherit;
    border-bottom: 1px solid var(--color-contrast-lower);
  }
}

.f-header__nav--is-visible {
  visibility: visible;
  opacity: 1;
  transform: translateY(0);
  transition: visibility 0s, opacity .3s, transform .3s;
}

.f-header__nav-logo-wrapper {
  display: none; // hide logo nav on small devices
}

.f-header__item {
  flex-shrink: 0;
  border-bottom: 1px solid var(--color-contrast-lower);
}

.f-header__dropdown-icon {
  display: none; // hide dropdown arrow on smaller screens
}

.f-header__link,
.f-header__dropdown-link {
  display: block;
  display: flex;
  align-items: center; // align icon with text
  color: var(--color-contrast-high);
  text-decoration: none;
  padding: var(--space-xs) 0;

  &:hover,
  &[aria-current="page"] {
    color: var(--color-primary);
  }

  .icon {
    flex-shrink: 0;
  }
}

.f-header__btn,
.f-header__form-control {
  width: 100%;
  margin: var(--space-xs) 0;
}

.f-header__dropdown { // sub navigation
  padding-left: var(--space-md); // offset sub nav
}

@include breakpoint(md) {
  .f-header__mobile-content {
    display: none; // hide logo + menu (mobile content)
  }

  .f-header__nav {
    // reset
    position: static;
    padding: 0;
    background-color: transparent;
    box-shadow: none;
    visibility: visible;
    opacity: 1;
    transform: translateY(0);
    transition: none;
    max-height: none;
    overflow: visible;
    overscroll-behavior: auto;

    // new style
    height: var(--f-header-height);
    font-size: 0.875em; // edit font size of all nav elements

    &::before { // reset
      display: none;
    }
  }

  .f-header__nav-logo-wrapper {
    display: block; // fallback
    display: flex;
  }

  .f-header__nav-grid,
  .f-header__list {
    display: flex;
    align-items: center;
  }

  .f-header__nav-grid {
    height: 100%;
  }

  .f-header__item {
    display: inline-block; // fallback
    position: relative;
    border-bottom: none;
    margin-right: var(--space-xs); // margin between nav items

    &:last-child {
      margin-right: 0;
    }
  }

  .f-header__dropdown-icon {
    display: block;
    margin-left: var(--space-xxxxs);
    width: 12px;
    height: 12px;
    flex-shrink: 0;
  }

  .f-header__link {
    padding: var(--space-xxxs) var(--space-xxs);
  }

  .f-header__link--icon {
    span {
      display: none;
    }
  }

  .f-header__btn,
  .f-header__form-control {
    margin: 0; // reset
  }

  .f-header__dropdown {
    font-size: 1rem;
    position: absolute;
    top: 100%;
    width: 200px;
    left: calc(50% - 100px);
    padding: var(--space-xxxs) 0;
    background-color: var(--color-bg);
    border-radius: var(--radius-md);
    box-shadow: var(--shadow-md);
    z-index: var(--zindex-popover);

    // hide
    visibility: hidden;
    opacity: 0;
    transition: visibility .2s .2s, opacity .2s 0s;

    .f-header__item:hover & {
      visibility: visible;
      opacity: 1;
      transition: visibility .2s 0s, opacity .2s 0s;
    }
  }

  .f-header__dropdown-link {
    color: var(--color-contrast-high);
    padding: var(--space-xs) var(--space-sm);

    &:hover {
      background-color: var(--color-contrast-lower);
    }
  }
}

html:not(.js) {
  .f-header__nav-control {
    display: none;
  }

  .f-header__nav {
    position: static;
    padding: var(--space-xxs) 0 var(--space-md);
    box-shadow: none;
    visibility: visible;
    opacity: 1;
    transform: translateY(0);
  }
}

/* -------------------------------- 

File#: _1_anim-menu-btn
Title: Animated Menu Button
Descr: A menu button w/ a morphing icon
Usage: codyhouse.co/license

-------------------------------- */

:root {
    --anim-menu-btn-size: 48px;
    
    // 🍔 icon
    --anim-menu-btn-icon-size: 32px;
    --anim-menu-btn-icon-stroke: 2px;
  }
  
  .anim-menu-btn {
    display: flex;
    justify-content: center;
    align-items: center;
    width: var(--anim-menu-btn-size);
    height: var(--anim-menu-btn-size);
    color: var(--color-contrast-high); // icon color
  }
  
  // icons
  .anim-menu-btn__icon {
    position: relative;
    display: block;
    font-size: var(--anim-menu-btn-icon-size);
    width: 1em;
    height: var(--anim-menu-btn-icon-stroke);
    color: inherit;
    background-image: linear-gradient(currentColor, currentColor);
    background-repeat: no-repeat;
    transform: scale(1);
    
    &::before, &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      width: 100%;
      background-image: inherit;
      border-radius: inherit;
    }
  }
  
  // menu to 'X' close
  .anim-menu-btn__icon--close {
    background-size: 100% 100%;
    will-change: transform, background-size;
    transition: transform .2s, background-size .2s;
  
    .anim-menu-btn:active & {
      transform: scale(0.9);
    }
  
    &::before, &::after {
      will-change: inherit;
      transition: inherit;
    }
  
    &::before { // line top
      transform: translateY(-0.25em) rotate(0);
    }
  
    &::after { // line bottom
      transform: translateY(0.25em) rotate(0);
    }
  }
  
  .anim-menu-btn--state-b {
    .anim-menu-btn__icon--close {
      background-size: 0% 100%;
  
      &::before {
        transform: translateY(0) rotate(45deg);
      }
  
      &::after {
        transform: translateY(0) rotate(-45deg);
      }
    }
  }
  
  // menu to arrow
  .anim-menu-btn__icon--arrow-left,
  .anim-menu-btn__icon--arrow-right,
  .anim-menu-btn__icon--arrow-up,
  .anim-menu-btn__icon--arrow-down {
    border-radius: 50em;
    will-change: transform;
    transition: transform .2s;
  
    .anim-menu-btn:active & {
      transform: scale(0.9);
    }
  
    &::before, &::after {
      transform-origin: calc(var(--anim-menu-btn-icon-stroke)/2) 50%;
      will-change: transform, width;
      transition: transform .2s, width .2s;
    }
  
    &::before { // line top
      transform: translateY(-0.25em) rotate(0);
    }
  
    &::after { // line bottom
      transform: translateY(0.25em) rotate(0);
    }
  }
  
  .anim-menu-btn__icon--arrow-right {
    transform: rotate(180deg);
  
    .anim-menu-btn:active & {
      transform: rotate(180deg) scale(0.9);
    }
  }
  
  .anim-menu-btn--state-b {
    .anim-menu-btn__icon--arrow-left,
    .anim-menu-btn__icon--arrow-right,
    .anim-menu-btn__icon--arrow-up,
    .anim-menu-btn__icon--arrow-down {
      &::before, &::after {
        width: 50%;
      }
  
      &::before {
        transform: translateY(0) rotate(-45deg);
      }
  
      &::after {
        transform: translateY(0) rotate(45deg);
      }
    }
  
    &:active .anim-menu-btn__icon--arrow-up {
      transform: rotate(90deg) scale(0.9);
    }
  
    .anim-menu-btn__icon--arrow-up {
      transform: rotate(90deg);
    }
  
    &:active .anim-menu-btn__icon--arrow-down {
      transform: rotate(-90deg) scale(0.9);
    }
  
    .anim-menu-btn__icon--arrow-down {
      transform: rotate(-90deg);
    }
  }